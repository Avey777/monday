#
# Local applications
#

<: &graphql-local
  name: graphql
  path: github.com/eko/graphql # Will find in GOPATH
  watch: true # Default: false (do not watch directory)
  hostname: graphql.svc.local # Optional, in case you want to map a specific hostname with a single IP address
  setup: # Optional, in case you want to setup the project first if directory does not exists
    commands:
      - go get github.com/eko/graphql
      - echo You can use ~/path syntax and environment variables like $GOPATH in your commands
    env: # Also optional, in case you need to specify some environment variables
      GOPRIVATE=*.acme.tld
    env_file: ~/my/project/.env # Or, via an environment file...
  build: # Optionally, you can define a build section to build your application before running it
    commands:
      - docker build -t graphql-image .
    env:
      DOCKER_BUILDKIT: 1
  run:
    command: docker run --rm --name graphql --network=host graphql-image
    env: # Optional, in case you want to specify some environment variables for this app
      HTTP_PORT: 8005
    env_file: "github.com/eko/graphql/.env" # Optional, in case you want to specify some environment variables from a file
    stop_commands:
      - docker stop graphql
  monitoring: # Optional, in case you want to declare a monitoring, specify how the metrics can be retrieved
    port: 8001
    url: /metrics
  files: # Optional, you can also declare some files content with dynamic values coming from your project YAML or simply copy files
    - type: content
      to: $GOPATH/src/github.com/eko/graphql/my_file
      content: |
        This is my file content and here are the current project applications:
          {{- range $app := .Applications }}
          Name: {{ $app.Name }}
          {{- end }}
    - type: copy
      from: $GOPATH/src/github.com/eko/graphql/.env.dist
      to: $GOPATH/src/github.com/eko/graphql/.env

<: &grpc-api-local
  name: grpc-api
  path: github.com/eko/grpc-api # Will find in GOPATH
  watch: true # Default: false (do not watch directory)
  hostname: grpc-api.svc.local # Optional, in case you want to map a specific hostname with a single IP address
  setup: # Optional, in case you want to setup the project first if directory does not exists
    commands:
      - go get github.com/eko/grpc-api
      - echo You can use ~/path syntax and environment variables like $GOPATH in your commands
    env: # Also optional, in case you need to specify some environment variables
      GOPRIVATE=*.acme.tld
    env_file: ~/my/project/.env # Or, via an environment file...
  run:
    command: go run main.go
    env: # Optional, in case you want to specify some environment variables for this app
      GRPC_PORT: 8006
    env_file: "github.com/eko/grpc-api/.env" # Optional, in case you want to specify some environment variables from a file
  monitoring:
    port: 8001
    url: /metrics

<: &elasticsearch-local
  name: elasticsearch
  path: /Users/vincent/dev/docker
  watch: true # Default: false (do not watch directory)
  run:
    command: docker start -i elastic
    stop_commands:
      - docker stop elastic
