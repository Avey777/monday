// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/forward/kubernetes/forwarder_test.go

// Package kubernetes is a generated GoMock package.
package kubernetes

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/client-go/kubernetes/typed/apps/v1"
	v10 "k8s.io/client-go/kubernetes/typed/core/v1"
)

// MockClientSetInterface is a mock of ClientSetInterface interface.
type MockClientSetInterface struct {
	ctrl     *gomock.Controller
	recorder *MockClientSetInterfaceMockRecorder
}

// MockClientSetInterfaceMockRecorder is the mock recorder for MockClientSetInterface.
type MockClientSetInterfaceMockRecorder struct {
	mock *MockClientSetInterface
}

// NewMockClientSetInterface creates a new mock instance.
func NewMockClientSetInterface(ctrl *gomock.Controller) *MockClientSetInterface {
	mock := &MockClientSetInterface{ctrl: ctrl}
	mock.recorder = &MockClientSetInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockClientSetInterface) EXPECT() *MockClientSetInterfaceMockRecorder {
	return m.recorder
}

// AppsV1 mocks base method.
func (m *MockClientSetInterface) AppsV1() v1.AppsV1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AppsV1")
	ret0, _ := ret[0].(v1.AppsV1Interface)
	return ret0
}

// AppsV1 indicates an expected call of AppsV1.
func (mr *MockClientSetInterfaceMockRecorder) AppsV1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AppsV1", reflect.TypeOf((*MockClientSetInterface)(nil).AppsV1))
}

// CoreV1 mocks base method.
func (m *MockClientSetInterface) CoreV1() v10.CoreV1Interface {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CoreV1")
	ret0, _ := ret[0].(v10.CoreV1Interface)
	return ret0
}

// CoreV1 indicates an expected call of CoreV1.
func (mr *MockClientSetInterfaceMockRecorder) CoreV1() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CoreV1", reflect.TypeOf((*MockClientSetInterface)(nil).CoreV1))
}
