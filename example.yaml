# Settings

gopath: /dev/golang # Optional, default to user's $GOPATH env var

watcher: # Optional
  exclude: # Optional, in case you want to exclude some (sub-)directories from file watching
    - .git
    - node_modules
    - /event/an/absolute/path

# Local applications

<: &graphql-local
  name: graphql
  path: github.com/eko/graphql # Will find in GOPATH (as executable is "go")
  watch: true # Default: false (do not watch directory)
  hostname: graphql.svc.local # Optional, in case you want to map a specific hostname with a single IP address
  executable: go
  args:
    - run
    - cmd/main.go
  env: # Optional, in case you want to specify some environment variables for this app
    HTTP_PORT: 8005
  setup: # Optional, in case you want to setup the project first if directory does not exists
    - go get github.com/eko/graphql
    - echo You can use ~/path syntax and environment variables like $GOPATH in your commands

<: &grpc-api-local
  name: grpc-api
  path: github.com/eko/grpc-api # Will find in GOPATH (as executable is "go")
  watch: true # Default: false (do not watch directory)
  hostname: grpc-api.svc.local # Optional, in case you want to map a specific hostname with a single IP address
  executable: go
  args:
    - run
    - main.go
  env: # Optional, in case you want to specify some environment variables for this app
    GRPC_PORT: 8006
  setup: # Optional, in case you want to setup the project first if directory does not exists
    - go get github.com/eko/grpc-api
    - echo You can use ~/path syntax and environment variables like $GOPATH in your commands

<: &elasticsearch-local
  name: elasticsearch
  path: /Users/vincent/dev/docker
  watch: true # Default: false (do not watch directory)
  executable: docker
  args:
    - start
    - -i
    - elastic
  stop_executable: docker # Optional, but useful for stopping containers for instance
  stop_args: # Optional
    - stop
    - elastic

# Kubernetes forwards

<: &kubernetes-context preprod

# Example of Kubernetes local port-forward: forward a specific pod port locally
# This is cool for avoiding to run applications locally and hit an environment from your
# local machine
<: &graphql-forward
  name: graphql
  type: kubernetes
  values:
    context: *kubernetes-context
    namespace: backend
    labels:
      app: graphql
    hostname: graphql.svc.local # Optional
    ports:
     - 8080:8000

# Example of Kubernetes remote-forward: this replaces your current pod in an environment with
# a proxy that allows us to forward traffic locally. This is really cool to debug on an environment
# but we disaprove using it on your production environment!
<: &grpc-api-kubernetes-remote
  name: grpc-api
  type: kubernetes-remote
  values:
    context: *kubernetes-context
    namespace: backend
    labels:
      app: grpc-api
    ports:
     - 8080:8080
     - 8001:8001

<: &grpc-api-forward
  name: grpc-api
  type: kubernetes
  values:
    context: *kubernetes-context
    namespace: backend
    labels:
      app: grpc-api
    hostname: grpc-api.svc.local # Optional
    ports:
     - 8080:8080

# SSH Forwards

# Example of SSH local forward: forward a specific remote port locally
# Here, I'm forwarding on port 8080 locally my production website (port 80)
<: &composieux-fr-local
  name: composieux-fr-local
  type: ssh
  values:
    remote: vincent@composieux.fr # SSH <user>@<hostname>
    args:
      - "-i/Users/name/.ssh/private_key"
    hostname: composieux.fr.svc.local # Optional
    ports:
     - 8080:80

# Example of SSH remote forward: forward all trafic on remote to a local application
# You don't have to do this at home but here, I'm forwarding all my production traffic
# on my local machine.
<: &composieux-fr-remote
  name: composieux-fr-remote
  type: ssh-remote
  values:
    remote: vincent@composieux.fr # SSH <user>@<hostname>
    args:
      - "-i/Users/name/.ssh/private_key"
    ports:
     - 8080:80

# Proxy forwards

# Example of Proxy forward type: this will allow you to call locally elasticsearch.svc.local:9200
# and your call will be proxified to vpc-xxx-rO6gjlqbkwzmzde.eu-west-3.es.amazonaws.com:443
<: &elasticsearch-proxy
  name: elasticsearch-proxy
  type: proxy
  values:
    hostname: elasticsearch.svc.local
    proxy_hostname: vpc-xxx-rO6gjlqbkwzmzde.eu-west-3.es.amazonaws.com
    ports:
     - 9200:443

# Projects

projects:
 - name: full
   local:
    - *graphql-local
    - *grpc-api-local
    - *elasticsearch-local

 - name: graphql
   local:
    - *graphql-local
   forward:
    - *grpc-api-forward

 - name: forward-only
   forward:
    - *graphql-forward
    - *grpc-api-forward

 - name: forward-composieux-website
   forward:
    - *composieux-fr-local
